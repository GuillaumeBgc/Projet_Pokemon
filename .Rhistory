plot(des,barplot=TRUE)
pokedex <- read.csv('pokedex.csv', row.names=1,encoding="UTF-8")
data <- pokedex %>% distinct(pokedex_number,.keep_all = TRUE)
summary(data)
#NA : base_friendship  base_experience  percentage_male
filter(data, is.na(base_friendship))$pokedex_number
filter(data, is.na(base_experience))$pokedex_number
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>%
filter(pokedex_number<808)
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>% mutate_all(~replace(., is.na(.), 0))
which(is.na(data))
data.compet <- data %>% select(pokedex_number, hp, attack, defense, sp_attack, sp_defense, speed, type_1, type_2)
data.compet$type_1 <- as.factor(data.compet$type_1)
data.compet$type_2 <- as.factor(data.compet$type_2)
pairs(data.compet[2:7])
boxplot(data.compet[2:7])
data.quali <- data.compet %>% select(type_1, type_2)
data.quanti <- data.compet %>% select(hp, attack, defense, sp_attack, sp_defense, speed)
dist.quanti <- dist(data.quanti)
# data type 1 to binaries
data.quali.type1 <- data.quali %>%
select(type_1) %>%
droplevels()
data.disj.type1 <- acm.disjonctif(data.quali.type1)
names(data.disj.type1) <- sub("type_1.", "", names(data.disj.type1))
data.disj.type1$pokedex_number <- data.compet$pokedex_number
# data type 2 to binaries
data.quali.type2 <-data.quali %>%
select(type_2) %>%
droplevels()
data.disj.type2 <- acm.disjonctif(data.quali.type2)
names(data.disj.type2) <- sub("type_2.", "", names(data.disj.type2))
data.disj.type2$pokedex_number <- data.compet$pokedex_number
data.disj.type2 <- data.disj.type2 %>% select(-1)
# data merge type 1 and type 2
data.disj_type = bind_rows(data.disj.type1  ,
data.disj.type2 ) %>%
group_by(pokedex_number) %>%
summarise_all(sum) %>% select(-1)
data.disj <- as.matrix(data.disj_type)
# classic distance
njl = apply(data.disj,2,sum)
distk2 = sapply(1:nrow(data.disj),FUN=function(j){
apply(sapply(1:nrow(data.disj),FUN=function(i) {
abs(data.disj[j,]-data.disj[i,])},simplify = TRUE)/njl,2,sum)
})
distk2 = as.dist(distk2*nrow(data.disj)/ncol(data.disj))
d= (5*dist.quanti + distk2)*1/6
mat <- as.matrix(d)
image(1:807,1:807,mat)
# methode de ward
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(select(data.quanti,-c(id,grp)),3,nstart=50)
I.intra = sapply(1:20,FUN=function(k) kmeans(LCdata,centers=k,nstart=50)$tot.withinss)
LoupChien = read.table("loup_chien.dat",header=TRUE)
LCdata    = LoupChien[LoupChien$espece!="inconnu",1:3]
LCespece  = LoupChien$espece[LoupChien$espece!="inconnu"]
CorDist = as.dist((1-cor(t(LCdata)))/2)
image(1:nrow(LCdata),1:nrow(LCdata),(1-cor(t(LCdata)))/2)
par(mfrow=c(1,2))
plot(LoC~LoM,data=LCdata,pch=20) ;plot(LaM~LoM,data=LCdata,pch=20)
pairs(LCdata)
boxplot(LCdata)
LC.cp = hclust(dist(LCdata),method="complete")
plot(LC.cp,hang=-1)
plot(rev(LC.cp$height)[1:15],type="b")
LC.ward = hclust(dist(scale(LCdata)),method="ward.D")
plot(LC.ward,hang=-1)
plot(rev(LC.ward$height)[1:15],type="b")
gpe = cutree(LC.ward,k=3)
par(mfrow=c(1,2))
plot(LCdata$LoM,LCdata$LoC,xlab="longueur molaire",ylab="longueur carnassiere",type="n")
text(LCdata$LoM,LCdata$LoC,labels=row.names(LCdata),col=gpe+1)
plot(LCdata$LoM,LCdata$LaM,xlab="longueur molaire",ylab="largeur molaire",type="n")
text(LCdata$LoM,LCdata$LaM,labels=row.names(LCdata),col=gpe+1)
inc = which(LoupChien$espece=="inconnu")
par(mfrow=c(1,2))
plot(LCdata$LoM,LCdata$LoC,xlab="longueur molaire",ylab="longueur carnassiere",type="n")
text(LCdata$LoM,LCdata$LoC,labels=row.names(LCdata),col=gpe+1)
text(LCdata$LoM[inc],LCdata$LoC[inc],labels="Inconnu",lwd=2,col=6)
plot(LCdata$LoM,LCdata$LaM,xlab="longueur molaire",ylab="largeur molaire",type="n")
text(LCdata$LoM,LCdata$LaM,labels=row.names(LCdata),col=gpe+1)
text(LCdata$LoM[inc],LCdata$LaM[inc],labels="Inconnu",lwd=2,col=6)
I.intra = sapply(1:20,FUN=function(k) kmeans(LCdata,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(select(data.quanti),10,nstart=50)
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(select(data.quanti),10,nstart=50)
pkmn.kmeans = kmeans(data.quanti,10,nstart=50)
clusplot(data.quanti,pkmn.kmeans$cluster,labels=10)
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(data.quanti,10,nstart=50)
clusplot(data.quanti,pkmn.kmeans$cluster,labels=10)
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(data.quanti,10,nstart=90)
clusplot(data.quanti,pkmn.kmeans$cluster,labels=10)
d = dist.quanti
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
NbClust(data.quanti, min.nc=2, max.nc=15, method="ward.D", index="all")
gpe.ward = cutree(cah.ward,k=3)
data.quanti$grp <- as.factor(gpe.ward)
des = catdes(select(data.quanti, -id),num.var=7)
gpe.ward = cutree(cah.ward,k=3)
data.quanti$grp <- as.factor(gpe.ward)
des = catdes(select(data.quanti),num.var=7)
gpe.ward = cutree(cah.ward,k=3)
data.quanti$grp <- as.factor(gpe.ward)
des = catdes(data.quanti,num.var=7)
plot(des,barplot=TRUE)
gpe.ward = cutree(cah.ward,k=4)
data.quanti$grp <- as.factor(gpe.ward)
des = catdes(data.quanti,num.var=7)
plot(des,barplot=TRUE)
data.quanti$grp =
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
data.quanti$grp =
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti,centers=k,nstart=50)$tot.withinss)
data.quanti$grp =
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti[1:6],centers=k,nstart=50)$tot.withinss)
I.intra = sapply(1:20,FUN=function(k) kmeans(data.quanti[1:6],centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
pkmn.kmeans = kmeans(data.quanti,4,nstart=50)
clusplot(data.quanti,pkmn.kmeans$cluster,labels=4,col.p=as.numeric(data.quanti$grp))
View(data.compet)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastcluster)
library(ggplot2)
library(cluster)
library(dendextend)
library(factoextra)
library(NbClust)
library(FactoMineR)
pokedex <- read.csv('pokedex.csv', row.names=1,encoding="UTF-8")
data <- pokedex %>% distinct(pokedex_number,.keep_all = TRUE)
#NA : base_friendship  base_experience  percentage_male
filter(data, is.na(base_friendship))$pokedex_number
filter(data, is.na(base_experience))$pokedex_number
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>%
filter(pokedex_number<808)
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>% mutate_all(~replace(., is.na(.), 0))
which(is.na(data))
data.compet <- data %>% select(pokedex_number, hp, attack, defense, sp_attack, sp_defense, speed,
against_normal,against_fire,against_water,against_electric,
against_grass,against_ice,against_fight,against_poison,against_ground,
against_flying,against_psychic,against_bug,against_rock,against_ghost,
against_dragon,against_dark,against_steel,against_fairy)
data.compet[8:25] <- lapply(data.compet[c("against_normal","against_fire","against_water","against_electric",
"against_grass","against_ice","against_fight","against_poison",
"against_ground","against_dragon","against_dark","against_steel",
"against_fairy")], as.factor)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(select(data.compet,-1),test.kmeans$cluster,labels=4,col.p=as.numeric(data.compet$grp))
View(data.compet)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(select(data.compet,-1),test.kmeans$cluster,labels=4,col.p=as.numeric(data.compet$grp))
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
d = dist.quanti
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
NbClust(data.quanti, min.nc=2, max.nc=15, method="ward.D", index="all")
library(tidyverse)
library(fastcluster)
library(ggplot2)
library(cluster)
library(dendextend)
library(factoextra)
library(NbClust)
library(FactoMineR)
pokedex <- read.csv('pokedex.csv', row.names=1,encoding="UTF-8")
data <- pokedex %>% distinct(pokedex_number,.keep_all = TRUE)
summary(data)
#NA : base_friendship  base_experience  percentage_male
filter(data, is.na(base_friendship))$pokedex_number
filter(data, is.na(base_experience))$pokedex_number
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>%
filter(pokedex_number<808)
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>% mutate_all(~replace(., is.na(.), 0))
which(is.na(data))
data.compet <- data %>% select(pokedex_number, hp, attack, defense, sp_attack, sp_defense, speed, type_1, type_2)
data.compet$type_1 <- as.factor(data.compet$type_1)
data.compet$type_2 <- as.factor(data.compet$type_2)
pairs(data.compet[2:7])
boxplot(data.compet[2:7])
data.quali <- data.compet %>% select(type_1, type_2)
data.quanti <- data.compet %>% select(hp, attack, defense, sp_attack, sp_defense, speed)
dist.quanti <- dist(data.quanti)
# data type 1 to binaries
data.quali.type1 <- data.quali %>%
select(type_1) %>%
droplevels()
data.disj.type1 <- acm.disjonctif(data.quali.type1)
names(data.disj.type1) <- sub("type_1.", "", names(data.disj.type1))
data.disj.type1$pokedex_number <- data.compet$pokedex_number
# data type 2 to binaries
data.quali.type2 <-data.quali %>%
select(type_2) %>%
droplevels()
data.disj.type2 <- acm.disjonctif(data.quali.type2)
names(data.disj.type2) <- sub("type_2.", "", names(data.disj.type2))
data.disj.type2$pokedex_number <- data.compet$pokedex_number
data.disj.type2 <- data.disj.type2 %>% select(-1)
# data merge type 1 and type 2
data.disj_type = bind_rows(data.disj.type1  ,
data.disj.type2 ) %>%
group_by(pokedex_number) %>%
summarise_all(sum) %>% select(-1)
data.disj <- as.matrix(data.disj_type)
# classic distance
njl = apply(data.disj,2,sum)
distk2 = sapply(1:nrow(data.disj),FUN=function(j){
apply(sapply(1:nrow(data.disj),FUN=function(i) {
abs(data.disj[j,]-data.disj[i,])},simplify = TRUE)/njl,2,sum)
})
distk2 = as.dist(distk2*nrow(data.disj)/ncol(data.disj))
d= (5*dist.quanti + distk2)*1/6
mat <- as.matrix(d)
image(1:807,1:807,mat)
data.disj_type$id <- data.compet$pokedex_number
data.quanti$id <- data.compet$pokedex_number
data.final <- merge(data.disj_type, data.quanti, on='id')
data.final <-data.final %>%  select(-1)
gpe.ward = cutree(cah.ward,k=6)
data.final$grp <- as.factor(gpe.ward)
acp = PCA(data_final[1:6],scale.unit=TRUE,graph=F,quali.sup=10)
data.disj_type$id <- data.compet$pokedex_number
data.quanti$id <- data.compet$pokedex_number
data.final <- merge(data.disj_type, data.quanti, on='id')
data.final <-data.final %>%  select(-1)
gpe.ward = cutree(cah.ward,k=6)
data.final$grp <- as.factor(gpe.ward)
acp = PCA(data_final[1:6],scale.unit=TRUE,graph=F)
plot(acp,choix="ind",habillage = 25,col.hab=c("green","blue","red","orange","magenta", "yellow"),autoLab="no")
data.disj_type$id <- data.compet$pokedex_number
data.quanti$id <- data.compet$pokedex_number
data.final <- merge(data.disj_type, data.quanti, on='id')
data.final <-data.final %>%  select(-1)
gpe.ward = cutree(cah.ward,k=6)
data.final$grp <- as.factor(gpe.ward)
acp = PCA(data_final[1:6],scale.unit=TRUE,graph=F)
plot(acp,choix="ind",habillage=25,col.hab=c("green","blue","red","orange","magenta", "yellow"),autoLab="no")
data.disj_type$id <- data.compet$pokedex_number
data.quanti$id <- data.compet$pokedex_number
data.final <- merge(data.disj_type, data.quanti, on='id')
data.final <-data.final %>%  select(-1)
gpe.ward = cutree(cah.ward,k=6)
data.final$grp <- as.factor(gpe.ward)
des = catdes(data.final,num.var=25)
plot(des,barplot=TRUE)
d = dist.quanti
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
#NbClust(data.quanti, min.nc=2, max.nc=15, method="ward.D", index="all")
gpe.ward = cutree(cah.ward,k=4)
data.quanti$grp <- as.factor(gpe.ward)
des = catdes(data.quanti,num.var=7)
View(data.quanti)
gpe.ward = cutree(cah.ward,k=4)
data.quanti$grp <- as.factor(gpe.ward)
data.quanti <- data.quanti %>% select(-id)
des = catdes(data.quanti,num.var=7)
plot(des,barplot=TRUE)
gpe.ward = cutree(cah.ward,k=5)
data.compet$grp <- as.factor(gpe.ward)
des = catdes(data.compet,num.var=26)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastcluster)
library(ggplot2)
library(cluster)
library(dendextend)
library(factoextra)
library(NbClust)
library(FactoMineR)
pokedex <- read.csv('pokedex.csv', row.names=1,encoding="UTF-8")
data <- pokedex %>% distinct(pokedex_number,.keep_all = TRUE)
#NA : base_friendship  base_experience  percentage_male
filter(data, is.na(base_friendship))$pokedex_number
filter(data, is.na(base_experience))$pokedex_number
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>%
filter(pokedex_number<808)
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>% mutate_all(~replace(., is.na(.), 0))
which(is.na(data))
data.compet <- data %>% select(pokedex_number, hp, attack, defense, sp_attack, sp_defense, speed,
against_normal,against_fire,against_water,against_electric,
against_grass,against_ice,against_fight,against_poison,against_ground,
against_flying,against_psychic,against_bug,against_rock,against_ghost,
against_dragon,against_dark,against_steel,against_fairy)
data.compet[8:25] <- lapply(data.compet[c("against_normal","against_fire","against_water","against_electric",
"against_grass","against_ice","against_fight","against_poison",
"against_ground","against_dragon","against_dark","against_steel",
"against_fairy")], as.factor)
pairs(data.compet[2:7])
data.quali <- data.compet %>% select(against_normal,against_fire,against_water,against_electric,
against_grass,against_ice,against_fight,against_poison,against_ground,
against_flying,against_psychic,against_bug,against_rock,against_ghost,
against_dragon,against_dark,against_steel,against_fairy)
data.quanti <- data.compet %>% select(hp, attack, defense, sp_attack, sp_defense, speed)
dist.quanti <- dist(data.quanti)
data.quali.dij <- acm.disjonctif(data.quali)
data.disj <- as.matrix(data.quali.dij)
# classic distance
njl = apply(data.disj,2,sum)
distk2 = sapply(1:nrow(data.disj),FUN=function(j){
apply(sapply(1:nrow(data.disj),FUN=function(i) {
abs(data.disj[j,]-data.disj[i,])},simplify = TRUE)/njl,2,sum)
})
distk2 = as.dist(distk2*nrow(data.disj)/ncol(data.disj))
# methode de ward
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
gpe.ward = cutree(cah.ward,k=5)
data.compet$grp <- as.factor(gpe.ward)
des = catdes(data.compet,num.var=26)
des
plot(des,barplot=TRUE)
d = dist.quanti
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
#NbClust(data.quanti, min.nc=2, max.nc=15, method="ward.D", index="all")
gpe.ward = cutree(cah.ward,k=4)
data.quanti$grp <- as.factor(gpe.ward)
data.quanti <- data.quanti %>% select(-id)
BB=rnorm(100, mean = 0, sd = 1)
plot(1:100,BB)
BB=rnorm(100, mean = 0, sd = 1)
plot(1:100,BB)
AR3 = filter(BB, rep(1, 3))
AR3 = stat::filter(BB, rep(1, 3))
AR3 = stats::filter(BB, rep(1, 3))
plot(1:100, AR3)
mean(AR3)
mean(data.frame(AR3))
mean(AR3[2:100])
mean(na.omit(AR3))
AR3 = na.omit(stats::filter(BB, rep(1, 3)))
plot(1:100, AR3)
plot(1:98, AR3)
acf(1:98, AR3)
acf(AR3)
knitr::opts_chunk$set(echo = TRUE)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fastcluster)
library(ggplot2)
library(cluster)
library(dendextend)
library(factoextra)
library(NbClust)
library(FactoMineR)
pokedex <- read.csv('pokedex.csv', row.names=1,encoding="UTF-8")
data <- pokedex %>% distinct(pokedex_number,.keep_all = TRUE)
#NA : base_friendship  base_experience  percentage_male
filter(data, is.na(base_friendship))$pokedex_number
filter(data, is.na(base_experience))$pokedex_number
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>%
filter(pokedex_number<808)
filter(data, is.na(percentage_male))$pokedex_number
data <- data %>% mutate_all(~replace(., is.na(.), 0))
which(is.na(data))
data.compet <- data %>% select(pokedex_number, hp, attack, defense, sp_attack, sp_defense, speed,
against_normal,against_fire,against_water,against_electric,
against_grass,against_ice,against_fight,against_poison,against_ground,
against_flying,against_psychic,against_bug,against_rock,against_ghost,
against_dragon,against_dark,against_steel,against_fairy)
data.compet[8:25] <- lapply(data.compet[c("against_normal","against_fire","against_water","against_electric",
"against_grass","against_ice","against_fight","against_poison",
"against_ground","against_dragon","against_dark","against_steel",
"against_fairy")], as.factor)
pairs(data.compet[2:7])
data.quali <- data.compet %>% select(against_normal,against_fire,against_water,against_electric,
against_grass,against_ice,against_fight,against_poison,against_ground,
against_flying,against_psychic,against_bug,against_rock,against_ghost,
against_dragon,against_dark,against_steel,against_fairy)
data.quanti <- data.compet %>% select(hp, attack, defense, sp_attack, sp_defense, speed)
dist.quanti <- dist(data.quanti)
data.quali.dij <- acm.disjonctif(data.quali)
library(tidyverse)
library(fastcluster)
library(ggplot2)
library(cluster)
library(dendextend)
library(factoextra)
library(NbClust)
library(FactoMineR)
data.quali.dij <- acm.disjonctif(data.quali)
library(ade4)
data.quali.dij <- acm.disjonctif(data.quali)
data.disj <- as.matrix(data.quali.dij)
# classic distance
njl = apply(data.disj,2,sum)
distk2 = sapply(1:nrow(data.disj),FUN=function(j){
apply(sapply(1:nrow(data.disj),FUN=function(i) {
abs(data.disj[j,]-data.disj[i,])},simplify = TRUE)/njl,2,sum)
})
distk2 = as.dist(distk2*nrow(data.disj)/ncol(data.disj))
d= (5*dist.quanti + distk2)*1/6
mat <- as.matrix(d)
image(1:807,1:807,mat)
# methode de ward
cah.ward = hclust(d,method="ward.D")
plot(cah.ward,hang=-1)
plot(rev(cah.ward$height)[1:15],type="b")
gpe.ward = cutree(cah.ward,k=5)
data.compet$grp <- as.factor(gpe.ward)
des = catdes(data.compet,num.var=26)
des
plot(des,barplot=TRUE)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=50)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
resAF <- FAMD(data.compet, ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
View(data.compet)
resAF <- FAMD(data.compet[-1], ncp = 5, sup.var = NULL, ind = NULL, graph = TRUE)
coord <- data.frame(resAF$ind$coord)
I.intra = sapply(1:20,FUN=function(k) kmeans(coord,centers=k,nstart=50)$tot.withinss)
plot(I.intra,type="b",xlab="nb groupes",ylab="inertie intra")
test.kmeans <- kmeans(coord,3,nstart=100)
clusplot(coord,test.kmeans$cluster,labels=4)
View(data.compet)
